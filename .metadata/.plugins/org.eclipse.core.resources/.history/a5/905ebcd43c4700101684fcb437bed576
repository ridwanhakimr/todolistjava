package academytask;

import java.sql.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class TugasDAO {

    // Menyimpan data tugas ke dalam database
    public static void addTugas(Tugas tugas) {
        String query = "INSERT INTO tugas (judul, deskripsi, deadline) VALUES (?, ?, ?)";
        try (Connection conn = Database.connect();
             PreparedStatement stmt = conn.prepareStatement(query)) {
            
            stmt.setString(1, tugas.getJudul());
            stmt.setString(2, tugas.getDeskripsi());
            stmt.setDate(3, Date.valueOf(tugas.getDeadline()));

            stmt.executeUpdate();  // Eksekusi perintah untuk memasukkan data
        } catch (SQLException e) {
            System.out.println("Gagal menyimpan tugas: " + e.getMessage());
        }
    }

    // Mengambil semua tugas dari database
    public static List<Tugas> getAllTugas() {
        List<Tugas> tugasList = new ArrayList<>();
        String query = "SELECT * FROM tugas";
        try (Connection conn = Database.connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {
            
            while (rs.next()) {
                String judul = rs.getString("judul");
                String deskripsi = rs.getString("deskripsi");
                LocalDate deadline = rs.getDate("deadline").toLocalDate();
                tugasList.add(new Tugas(judul, deskripsi, deadline));
            }
        } catch (SQLException e) {
            System.out.println("Gagal mengambil tugas: " + e.getMessage());
        }
        return tugasList;
    }

    // Menghapus tugas dari database
    public static void deleteTugas(Tugas tugas) {
        String query = "DELETE FROM tugas WHERE judul = ?";
        try (Connection conn = Database.connect();
             PreparedStatement stmt = conn.prepareStatement(query)) {
            
            stmt.setString(1, tugas.getJudul());
            stmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println("Gagal menghapus tugas: " + e.getMessage());
        }
    }
    
    public static void updateTugas(Tugas tugas, String judulLama) {
        String query = "UPDATE tugas SET judul = ?, deskripsi = ?, deadline = ?, status = ? WHERE judul = ?";
        try (Connection conn = Database.connect();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, tugas.getJudul());
            stmt.setString(2, tugas.getDeskripsi());
            stmt.setDate(3, Date.valueOf(tugas.getDeadline()));
            stmt.setBoolean(4, tugas.isStatus());
            stmt.setString(5, judulLama);

            stmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println("Gagal memperbarui tugas: " + e.getMessage());
        }
    }
}
